version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: mnemosyne
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-homeserver_postgres_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./qdrant-config.yaml:/qdrant/config/production.yaml  # Custom config
    restart: unless-stopped
    environment:
      # Optimize for RAM usage
      QDRANT__SERVICE__MAX_REQUEST_SIZE_MB: 32
      QDRANT__SERVICE__MAX_WORKERS: 0  # Use all CPU cores
      QDRANT__SERVICE__ENABLE_CORS: true
    # Allocate more memory to Qdrant
    deploy:
      resources:
        limits:
          memory: 2G  # Adjust based on your server capacity
        reservations:
          memory: 1G
    # Use tmpfs for temporary data (optional)
    tmpfs:
      - /tmp:size=500M,noexec,nosuid,nodev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  app:
    build: .
    ports:
      - "8080:8000"  # Use 8080 to avoid conflicts
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-homeserver_postgres_pass}@db:5432/mnemosyne
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
    depends_on:
      db:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs  # Optional: for persistent logs

volumes:
  postgres_data:
  qdrant_data:
  redis_data: